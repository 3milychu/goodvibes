{"ast":null,"code":"var _jsxFileName = \"/Users/emilychu/Desktop/goodvibes/src/components/Swipe-Card.js\";\nimport React from 'react';\nimport { Card, CardWrapper } from 'react-swipeable-cards';\nimport * as d3 from \"d3\";\nimport data from './../data/data.csv';\nimport levels from './../data/levels.csv';\nlet dataset = [];\n\nclass SwipeCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      score: Math.floor(Math.random() * 100) + 20\n    };\n  }\n\n  onSwipe(data) {\n    console.log(data.name + \" was swiped.\");\n  }\n\n  onSwipeRight(data) {\n    console.log(\"I was swiped right.\");\n  }\n\n  renderCards() {\n    const cardStyle = {\n      backgroundColor: \"#f2f2f2\",\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    };\n    d3.csv(data).then((data, i) => {\n      dataset.push({\n        id: i,\n        quote: data['quote']\n      });\n    });\n\n    function callback(data) {\n      return dataset.map(d => {\n        return React.createElement(Card, {\n          style: cardStyle,\n          key: d.id,\n          onSwipe: this.onSwipe.bind(this),\n          onSwipeRight: this.onSwipeRight.bind(this),\n          data: d,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, d.quote);\n      });\n    }\n\n    d3.csv(data).then(callback.bind(this));\n  }\n\n  render() {\n    const wrapperStyle = {\n      backgroundColor: \"transparent\"\n    };\n    return React.createElement(CardWrapper, {\n      style: wrapperStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Hello\"), this.renderCards());\n  }\n\n}\n\nexport default SwipeCard;","map":{"version":3,"sources":["/Users/emilychu/Desktop/goodvibes/src/components/Swipe-Card.js"],"names":["React","Card","CardWrapper","d3","data","levels","dataset","SwipeCard","Component","state","score","Math","floor","random","onSwipe","console","log","name","onSwipeRight","renderCards","cardStyle","backgroundColor","width","display","justifyContent","alignItems","csv","then","i","push","id","quote","callback","map","d","bind","render","wrapperStyle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,uBAAlC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,IAAIC,OAAO,GAAC,EAAZ;;AAEA,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACNL,MAAAA,IAAI,EAAE,EADA;AAENM,MAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAzB,IAA8B;AAF/B,KAD8B;AAAA;;AAMtCC,EAAAA,OAAO,CAACV,IAAD,EAAO;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACa,IAAL,GAAY,cAAxB;AACD;;AAEDC,EAAAA,YAAY,CAACd,IAAD,EAAO;AACjBW,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;;AAEDG,EAAAA,WAAW,GAAG;AACZ,UAAMC,SAAS,GAAG;AAChBC,MAAAA,eAAe,EAAE,SADD;AAEhBC,MAAAA,KAAK,EAAC,MAFU;AAGhBC,MAAAA,OAAO,EAAC,MAHQ;AAIhBC,MAAAA,cAAc,EAAC,QAJC;AAKhBC,MAAAA,UAAU,EAAC;AALK,KAAlB;AAOAtB,IAAAA,EAAE,CAACuB,GAAH,CAAOtB,IAAP,EAAauB,IAAb,CAAkB,CAACvB,IAAD,EAAMwB,CAAN,KAAU;AAC1BtB,MAAAA,OAAO,CAACuB,IAAR,CAAa;AACXC,QAAAA,EAAE,EAACF,CADQ;AAEXG,QAAAA,KAAK,EAAC3B,IAAI,CAAC,OAAD;AAFC,OAAb;AAID,KALD;;AAOA,aAAS4B,QAAT,CAAkB5B,IAAlB,EAAwB;AACxB,aAAOE,OAAO,CAAC2B,GAAR,CAAaC,CAAD,IAAO;AACpB,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEd,SAAb;AACE,UAAA,GAAG,EAAEc,CAAC,CAACJ,EADT;AAEE,UAAA,OAAO,EAAE,KAAKhB,OAAL,CAAaqB,IAAb,CAAkB,IAAlB,CAFX;AAGE,UAAA,YAAY,EAAE,KAAKjB,YAAL,CAAkBiB,IAAlB,CAAuB,IAAvB,CAHhB;AAIE,UAAA,IAAI,EAAED,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKKA,CAAC,CAACH,KALP,CADF;AASD,OAVE,CAAP;AAWC;;AAED5B,IAAAA,EAAE,CAACuB,GAAH,CAAOtB,IAAP,EAAauB,IAAb,CAAkBK,QAAQ,CAACG,IAAT,CAAc,IAAd,CAAlB;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAG;AACnBhB,MAAAA,eAAe,EAAE;AADE,KAArB;AAIA,WACE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEgB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,EAEG,KAAKlB,WAAL,EAFH,CADF;AAMD;;AA3DqC;;AA8DxC,eAAeZ,SAAf","sourcesContent":["import React from 'react';\nimport { Card, CardWrapper } from 'react-swipeable-cards';\nimport * as d3 from \"d3\";\nimport data from './../data/data.csv';\nimport levels from './../data/levels.csv';\n\nlet dataset=[]\n\nclass SwipeCard extends React.Component {\n  state = {\n    data: [],\n    score: Math.floor(Math.random()*100)+20\n  };\n\n  onSwipe(data) {\n    console.log(data.name + \" was swiped.\");\n  }\n\n  onSwipeRight(data) {\n    console.log(\"I was swiped right.\");\n  }\n\n  renderCards() {\n    const cardStyle = {\n      backgroundColor: \"#f2f2f2\",\n      width:\"100%\",\n      display:\"flex\",\n      justifyContent:\"center\",\n      alignItems:\"center\"\n    }\n    d3.csv(data).then((data,i)=>{\n      dataset.push({\n        id:i,\n        quote:data['quote']\n      })\n    })\n\n    function callback(data) {\n    return dataset.map((d) => {\n          return(\n            <Card style={cardStyle}\n              key={d.id}\n              onSwipe={this.onSwipe.bind(this)}\n              onSwipeRight={this.onSwipeRight.bind(this)}\n              data={d}>\n                {d.quote}\n            </Card>\n          );\n        });\n    }\n\n    d3.csv(data).then(callback.bind(this));\n\n    \n  }\n\n  render() {\n    const wrapperStyle = {\n      backgroundColor: \"transparent\"\n    }\n    \n    return(\n      <CardWrapper style={wrapperStyle}>\n      <h1>Hello</h1>\n        {this.renderCards()}\n      </CardWrapper>\n    );\n  }\n}\n\nexport default SwipeCard"]},"metadata":{},"sourceType":"module"}