{"ast":null,"code":"var _jsxFileName = \"/Users/emilychu/Desktop/goodvibes/src/components/Card.js\";\nimport React from 'react';\nimport * as d3 from \"d3\";\nimport data from './../data/data.csv';\nimport levels from './../data/levels.csv';\nconst dataset = [];\nconst game_levels = [];\n\nclass Card extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      score: Math.floor(Math.random() * 100) + 20\n    };\n  }\n\n  refresh() {\n    let random;\n    let points = Math.floor(Math.random() * 100) + 20;\n    const self = this;\n    d3.csv(data).then(data => {\n      dataset.push(data);\n      random = Math.floor(Math.random() * data.length) + 0;\n      self.setState({\n        data: data[random]\n      });\n    });\n\n    function callback(data) {\n      this.setState({\n        data: data[random]\n      });\n    }\n\n    d3.csv(data).then(callback.bind(this));\n    this.setState({\n      score: this.state.score += points\n    });\n    getbadge(this.state.score);\n  }\n\n  getlevels() {\n    d3.csv(levels).then(levels => {\n      levels.forEach(item => {\n        game_levels.push(item);\n      });\n    });\n  }\n\n  getbadge(points) {}\n\n  componentDidMount() {\n    let random;\n    const self = this;\n    d3.csv(data).then(data => {\n      dataset.push(data);\n      random = Math.floor(Math.random() * data.length) + 0;\n      self.setState({\n        data: data[random]\n      });\n    });\n\n    function callback(data) {\n      this.setState({\n        data: data[random]\n      });\n    }\n\n    d3.csv(data).then(callback.bind(this));\n    getlevels();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.score)), React.createElement(\"div\", {\n      className: \"card\",\n      key: this.state.data.key,\n      onClick: this.refresh.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.data.quote)));\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/emilychu/Desktop/goodvibes/src/components/Card.js"],"names":["React","d3","data","levels","dataset","game_levels","Card","Component","state","score","Math","floor","random","refresh","points","self","csv","then","push","length","setState","callback","bind","getbadge","getlevels","forEach","item","componentDidMount","render","key","quote"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as d3 from \"d3\";\nimport data from './../data/data.csv';\nimport levels from './../data/levels.csv';\n\nconst dataset = [];\nconst game_levels = [];\n\nclass Card extends React.Component {\n  state = {\n    data: [],\n    score: Math.floor(Math.random()*100)+20\n  };\n    refresh() {\n\t  \tlet random;\n\t  \tlet points =  Math.floor(Math.random()*100)+20\n\t\tconst self = this;\n\n\t\td3.csv(data).then((data)=> {\n\t\tdataset.push(data)\n\t\trandom = Math.floor(Math.random()*data.length)+0\n\t\t  self.setState({ data: data[random] });\n\t\t});\n\n\t\tfunction callback(data) {\n\t\t  this.setState({ data: data[random] });\n\t\t}\n\n\t\td3.csv(data).then(callback.bind(this));\n\n\t\tthis.setState({score: this.state.score +=points})\n\n\t\tgetbadge(this.state.score)\n\t}\n\n\tgetlevels() {\n\t\td3.csv(levels)\n\t\t\t.then((levels)=>{\n\t\t\t\tlevels.forEach((item)=>{\n\t\t\t\t\tgame_levels.push(item)\n\t\t\t\t})\n\t\t\t})\n\n\t}\n\n\tgetbadge(points){\n\t\t\n\t}\n\n  componentDidMount() {\n  \tlet random;\n\tconst self = this;\n\n\td3.csv(data).then((data)=> {\n\tdataset.push(data)\n\trandom = Math.floor(Math.random()*data.length)+0\n\t  self.setState({ data: data[random] });\n\t});\n\n\tfunction callback(data) {\n\t  this.setState({ data: data[random] });\n\t}\n\n\td3.csv(data).then(callback.bind(this));\n\tgetlevels()\n  }\n\n\n  render() {\n    return (\n    \t<div>\n    \t\t<div className=\"score\">\n    \t\t\t<h2>{this.state.score}</h2>\n    \t\t</div>\n\n          <div className=\"card\" key={this.state.data.key} onClick={this.refresh.bind(this)}>\n            <h1>{this.state.data.quote}</h1>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default Card"]},"metadata":{},"sourceType":"module"}