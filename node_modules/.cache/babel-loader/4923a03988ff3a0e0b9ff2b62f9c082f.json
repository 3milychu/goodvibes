{"ast":null,"code":"var _jsxFileName = \"/Users/emilychu/Desktop/goodvibes/src/components/Swipe-Card.js\";\nimport React from 'react';\nimport { Card, CardWrapper } from 'react-swipeable-cards';\nimport * as d3 from \"d3\";\nimport data from './../data/data.csv';\nimport levels from './../data/levels.csv';\nlet dataset = [];\nd3.csv(data).then((data, i) => {\n  console.log(data);\n  dataset.push({\n    id: i,\n    quote: data['quote']\n  });\n}).then(console.log(dataset));\n\nclass SwipeCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      score: Math.floor(Math.random() * 100) + 20\n    };\n  }\n\n  onSwipe(data) {\n    console.log(data.name + \" was swiped.\");\n  }\n\n  onSwipeRight(data) {\n    console.log(\"I was swiped right.\");\n  }\n\n  renderCards() {\n    let random;\n    let points = Math.floor(Math.random() * 100) + 20;\n    const cardStyle = {\n      backgroundColor: \"#f2f2f2\",\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    };\n    const self = this;\n    d3.csv(data).then((data, i) => {\n      dataset.push({\n        id: i,\n        quote: data['quote']\n      });\n      random = Math.floor(Math.random() * data.length) + 0;\n      self.setState({\n        data: data[random]\n      });\n    });\n\n    function callback(data) {\n      this.setState({\n        data: data[random]\n      });\n    }\n\n    d3.csv(data).then(callback.bind(this)); // this.setState({score: this.state.score +=points})\n\n    return dataset.map(d => {\n      return React.createElement(Card, {\n        style: cardStyle,\n        key: d.id,\n        onSwipe: this.onSwipe.bind(this),\n        onSwipeRight: this.onSwipeRight.bind(this),\n        data: d,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, d.quote);\n    });\n  }\n\n  render() {\n    const wrapperStyle = {\n      backgroundColor: \"transparent\"\n    };\n    return React.createElement(CardWrapper, {\n      style: wrapperStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Hello\"), this.renderCards());\n  }\n\n}\n\nexport default SwipeCard;","map":{"version":3,"sources":["/Users/emilychu/Desktop/goodvibes/src/components/Swipe-Card.js"],"names":["React","Card","CardWrapper","d3","data","levels","dataset","csv","then","i","console","log","push","id","quote","SwipeCard","Component","state","score","Math","floor","random","onSwipe","name","onSwipeRight","renderCards","points","cardStyle","backgroundColor","width","display","justifyContent","alignItems","self","length","setState","callback","bind","map","d","render","wrapperStyle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, CardWrapper } from 'react-swipeable-cards';\nimport * as d3 from \"d3\";\nimport data from './../data/data.csv';\nimport levels from './../data/levels.csv';\n\nlet dataset=[]\nd3.csv(data).then((data,i)=>{\n  console.log(data)\n  dataset.push({\n    id:i,\n    quote:data['quote']\n  })\n})\n.then(\n  console.log(dataset))\n\n\nclass SwipeCard extends React.Component {\n  state = {\n    data: [],\n    score: Math.floor(Math.random()*100)+20\n  };\n\n  onSwipe(data) {\n    console.log(data.name + \" was swiped.\");\n  }\n\n  onSwipeRight(data) {\n    console.log(\"I was swiped right.\");\n  }\n\n  renderCards() {\n    let random;\n    let points =  Math.floor(Math.random()*100)+20\n    const cardStyle = {\n      backgroundColor: \"#f2f2f2\",\n      width:\"100%\",\n      display:\"flex\",\n      justifyContent:\"center\",\n      alignItems:\"center\"\n    }\n    const self = this;\n\n    d3.csv(data).then((data,i)=> {\n    dataset.push({\n      id:i,\n      quote:data['quote']\n    })\n    random = Math.floor(Math.random()*data.length)+0\n      self.setState({ data: data[random] });\n    });\n\n    function callback(data) {\n      this.setState({ data: data[random] });\n    }\n\n    d3.csv(data).then(callback.bind(this));\n\n    // this.setState({score: this.state.score +=points})\n\n    return dataset.map((d) => {\n          return(\n            <Card style={cardStyle}\n              key={d.id}\n              onSwipe={this.onSwipe.bind(this)}\n              onSwipeRight={this.onSwipeRight.bind(this)}\n               data={d}>\n            {d.quote}\n            </Card>\n          );\n        });\n  }\n\n  render() {\n    const wrapperStyle = {\n      backgroundColor: \"transparent\"\n    }\n    \n    return(\n      <CardWrapper style={wrapperStyle}>\n      <h1>Hello</h1>\n        {this.renderCards()}\n      </CardWrapper>\n    );\n  }\n}\n\nexport default SwipeCard"]},"metadata":{},"sourceType":"module"}