{"ast":null,"code":"var _jsxFileName = \"/Users/emilychu/Desktop/goodvibes/src/components/Swipe-Card.js\";\nimport React from 'react';\nimport { Card, CardWrapper } from 'react-swipeable-cards';\nimport * as d3 from \"d3\";\nimport data from './../data/data.csv';\nimport levels from './../data/levels.csv';\nlet dataset = [];\nd3.csv(data).then((data, i) => {\n  dataset.push({\n    id: i,\n    quote: data['quote']\n  });\n});\nconsole.log(dataset);\n\nclass SwipeCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      score: Math.floor(Math.random() * 100) + 20\n    };\n  }\n\n  onSwipe(data) {\n    console.log(data.name + \" was swiped.\");\n  }\n\n  onSwipeRight(data) {\n    console.log(\"I was swiped right.\");\n  }\n\n  renderCards() {\n    const cardStyle = {\n      backgroundColor: \"#f2f2f2\",\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    };\n    return dataset.map(d => {\n      return React.createElement(Card, {\n        style: cardStyle,\n        key: d.id,\n        onSwipe: this.onSwipe.bind(this),\n        onSwipeRight: this.onSwipeRight.bind(this),\n        data: d,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, d.quote);\n    });\n  }\n\n  render() {\n    const wrapperStyle = {\n      backgroundColor: \"transparent\"\n    };\n    return React.createElement(CardWrapper, {\n      style: wrapperStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Hello\"), this.renderCards());\n  }\n\n}\n\nexport default SwipeCard;","map":{"version":3,"sources":["/Users/emilychu/Desktop/goodvibes/src/components/Swipe-Card.js"],"names":["React","Card","CardWrapper","d3","data","levels","dataset","csv","then","i","push","id","quote","console","log","SwipeCard","Component","state","score","Math","floor","random","onSwipe","name","onSwipeRight","renderCards","cardStyle","backgroundColor","width","display","justifyContent","alignItems","map","d","bind","render","wrapperStyle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,uBAAlC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,IAAIC,OAAO,GAAC,EAAZ;AACAH,EAAE,CAACI,GAAH,CAAOH,IAAP,EAAaI,IAAb,CAAkB,CAACJ,IAAD,EAAMK,CAAN,KAAU;AAC1BH,EAAAA,OAAO,CAACI,IAAR,CAAa;AACXC,IAAAA,EAAE,EAACF,CADQ;AAEXG,IAAAA,KAAK,EAACR,IAAI,CAAC,OAAD;AAFC,GAAb;AAID,CALD;AAMAS,OAAO,CAACC,GAAR,CAAYR,OAAZ;;AAGA,MAAMS,SAAN,SAAwBf,KAAK,CAACgB,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACNb,MAAAA,IAAI,EAAE,EADA;AAENc,MAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAzB,IAA8B;AAF/B,KAD8B;AAAA;;AAMtCC,EAAAA,OAAO,CAAClB,IAAD,EAAO;AACZS,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACmB,IAAL,GAAY,cAAxB;AACD;;AAEDC,EAAAA,YAAY,CAACpB,IAAD,EAAO;AACjBS,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;;AAEDW,EAAAA,WAAW,GAAG;AACZ,UAAMC,SAAS,GAAG;AAChBC,MAAAA,eAAe,EAAE,SADD;AAEhBC,MAAAA,KAAK,EAAC,MAFU;AAGhBC,MAAAA,OAAO,EAAC,MAHQ;AAIhBC,MAAAA,cAAc,EAAC,QAJC;AAKhBC,MAAAA,UAAU,EAAC;AALK,KAAlB;AAOA,WAAOzB,OAAO,CAAC0B,GAAR,CAAaC,CAAD,IAAO;AACpB,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,SAAb;AACE,QAAA,GAAG,EAAEO,CAAC,CAACtB,EADT;AAEE,QAAA,OAAO,EAAE,KAAKW,OAAL,CAAaY,IAAb,CAAkB,IAAlB,CAFX;AAGE,QAAA,YAAY,EAAE,KAAKV,YAAL,CAAkBU,IAAlB,CAAuB,IAAvB,CAHhB;AAIE,QAAA,IAAI,EAAED,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKKA,CAAC,CAACrB,KALP,CADF;AASD,KAVE,CAAP;AAYD;;AAEDuB,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAG;AACnBT,MAAAA,eAAe,EAAE;AADE,KAArB;AAIA,WACE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAES,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,EAEG,KAAKX,WAAL,EAFH,CADF;AAMD;;AA/CqC;;AAkDxC,eAAeV,SAAf","sourcesContent":["import React from 'react';\nimport { Card, CardWrapper } from 'react-swipeable-cards';\nimport * as d3 from \"d3\";\nimport data from './../data/data.csv';\nimport levels from './../data/levels.csv';\n\nlet dataset=[]\nd3.csv(data).then((data,i)=>{\n  dataset.push({\n    id:i,\n    quote:data['quote']\n  })\n})\nconsole.log(dataset)\n\n\nclass SwipeCard extends React.Component {\n  state = {\n    data: [],\n    score: Math.floor(Math.random()*100)+20\n  };\n\n  onSwipe(data) {\n    console.log(data.name + \" was swiped.\");\n  }\n\n  onSwipeRight(data) {\n    console.log(\"I was swiped right.\");\n  }\n\n  renderCards() {\n    const cardStyle = {\n      backgroundColor: \"#f2f2f2\",\n      width:\"100%\",\n      display:\"flex\",\n      justifyContent:\"center\",\n      alignItems:\"center\"\n    }\n    return dataset.map((d) => {\n          return(\n            <Card style={cardStyle}\n              key={d.id}\n              onSwipe={this.onSwipe.bind(this)}\n              onSwipeRight={this.onSwipeRight.bind(this)}\n              data={d}>\n                {d.quote}\n            </Card>\n          );\n        });\n    \n  }\n\n  render() {\n    const wrapperStyle = {\n      backgroundColor: \"transparent\"\n    }\n    \n    return(\n      <CardWrapper style={wrapperStyle}>\n      <h1>Hello</h1>\n        {this.renderCards()}\n      </CardWrapper>\n    );\n  }\n}\n\nexport default SwipeCard"]},"metadata":{},"sourceType":"module"}