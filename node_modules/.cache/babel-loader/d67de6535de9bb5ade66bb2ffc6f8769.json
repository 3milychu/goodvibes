{"ast":null,"code":"var _jsxFileName = \"/Users/emilychu/Desktop/goodvibes/src/components/Swipe-Card.js\";\nimport React from 'react';\nimport { Card, CardWrapper } from 'react-swipeable-cards';\nimport * as d3 from \"d3\";\nimport data from './../data/data.csv';\nimport levels from './../data/levels.csv';\nlet dataset = [];\nconst wrapperStyle = {\n  backgroundColor: \"transparent\"\n};\nconst cardStyle = {\n  backgroundColor: \"#f2f2f2\",\n  width: \"100%\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  padding: \"5%\"\n};\n\nclass SwipeCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      score: Math.floor(Math.random() * 100) + 20\n    };\n  }\n\n  renderCards() {\n    return dataset.map(d => {\n      return React.createElement(Card, {\n        key: d.id,\n        onSwipe: this.onSwipe.bind(this),\n        data: d,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, d.quote));\n    });\n  }\n\n  onSwipe(data) {}\n\n  onSwipeRight(data) {}\n\n  refresh() {\n    let random;\n    let points = Math.floor(Math.random() * 100) + 20;\n    const self = this;\n    d3.csv(data).then((data, i) => {\n      dataset.push({\n        key: i,\n        quote: data['quote']\n      });\n      random = Math.floor(Math.random() * data.length) + 0;\n      self.setState({\n        data: data[random]\n      });\n    });\n\n    function callback(data) {\n      this.setState({\n        data: data[random]\n      });\n    }\n\n    d3.csv(data).then(callback.bind(this));\n    this.setState({\n      score: this.state.score += points\n    });\n    console.log(this.state.score);\n  }\n\n  componentDidMount() {\n    let random;\n    const self = this;\n    d3.csv(data).then(data => {\n      dataset.push(data);\n      random = Math.floor(Math.random() * data.length) + 0;\n      self.setState({\n        data: data[random]\n      });\n    });\n\n    function callback(data) {\n      this.setState({\n        data: data[random]\n      });\n    }\n\n    d3.csv(data).then(callback.bind(this));\n  }\n\n  render() {\n    return React.createElement(CardWrapper, {\n      style: wrapperStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"card\",\n      style: cardStyle,\n      key: this.state.data.key,\n      onSwipeRight: this.renderCards.bind(this),\n      data: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.data.quote)));\n  }\n\n}\n\nexport default SwipeCard;","map":{"version":3,"sources":["/Users/emilychu/Desktop/goodvibes/src/components/Swipe-Card.js"],"names":["React","Card","CardWrapper","d3","data","levels","dataset","wrapperStyle","backgroundColor","cardStyle","width","display","justifyContent","alignItems","padding","SwipeCard","Component","state","score","Math","floor","random","renderCards","map","d","id","onSwipe","bind","quote","onSwipeRight","refresh","points","self","csv","then","i","push","key","length","setState","callback","console","log","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, CardWrapper } from 'react-swipeable-cards';\nimport * as d3 from \"d3\";\nimport data from './../data/data.csv';\nimport levels from './../data/levels.csv';\n\nlet dataset=[]\n    const wrapperStyle = {\n      backgroundColor: \"transparent\"\n    }\n    const cardStyle = {\n      backgroundColor: \"#f2f2f2\",\n      width:\"100%\",\n      display:\"flex\",\n      justifyContent:\"center\",\n      alignItems:\"center\",\n      padding:\"5%\"\n    }\n\nclass SwipeCard extends React.Component {\n  state = {\n    data: [],\n    score: Math.floor(Math.random()*100)+20\n  };\n  renderCards() {\n    return dataset.map((d) => {\n      return(\n        <Card\n          key={d.id}\n          onSwipe={this.onSwipe.bind(this)}\n          data={d}>\n            <h1>{d.quote}</h1>\n        </Card>\n      );\n    });\n  }\n  onSwipe(data) {\n  }\n  onSwipeRight(data) {\n  }\n\n  refresh() {\n    let random;\n    let points =  Math.floor(Math.random()*100)+20\n    const self = this;\n\n    d3.csv(data).then((data,i)=> {\n    dataset.push({\n      key:i,\n      quote:data['quote']\n    })\n    random = Math.floor(Math.random()*data.length)+0\n      self.setState({ data: data[random] });\n    });\n\n    function callback(data) {\n      this.setState({ data: data[random] });\n    }\n\n    d3.csv(data).then(callback.bind(this));\n\n    this.setState({score: this.state.score +=points})\n\n    console.log(this.state.score)\n  }\n\ncomponentDidMount() {\n  let random;\n  const self = this;\n\n  d3.csv(data).then((data)=> {\n  dataset.push(data)\n  random = Math.floor(Math.random()*data.length)+0\n    self.setState({ data: data[random] });\n  });\n\n  function callback(data) {\n    this.setState({ data: data[random] });\n  }\n\n  d3.csv(data).then(callback.bind(this));\n  }\n\n  render() {\n    return(\n      <CardWrapper style={wrapperStyle}>\n          <Card className='card'\n          style={cardStyle}\n          key={this.state.data.key}\n          onSwipeRight={this.renderCards.bind(this)}\n          data={this}>\n            <h1>{this.state.data.quote}</h1>\n          </Card>\n      </CardWrapper>\n    );\n  }\n}\n\nexport default SwipeCard"]},"metadata":{},"sourceType":"module"}